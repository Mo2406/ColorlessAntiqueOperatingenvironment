import os

# File for storing the list of authorized vehicles
FILE_PATH = "AllowedVehiclesList.txt"

def load_allowed_vehicles():
    """Load the authorized vehicles from the file."""
    if not os.path.exists(FILE_PATH):
        # Create the file if it doesn't exist
        with open(FILE_PATH, 'w') as file:
            file.write("\n".join([
                'Ford F-150', 'Chevrolet Silverado', 'Tesla CyberTruck',
                'Toyota Tundra', 'Rivian R1T', 'Ram 1500'
            ]))
    with open(FILE_PATH, 'r') as file:
        return [line.strip() for line in file.readlines()]

def save_allowed_vehicles(vehicle_list):
    """Save the authorized vehicles to the file."""
    with open(FILE_PATH, 'w') as file:
        file.write("\n".join(vehicle_list))

def display_menu():
    """Function to display the menu"""
    print("\n********************************")
    print("AutoCountry Vehicle Finder v0.4")
    print("********************************")
    print("Please Enter the following number below from the following menu:\n")
    print("1. PRINT all Authorized Vehicles")
    print("2. SEARCH for Authorized Vehicle")
    print("3. ADD Authorized Vehicle")
    print("4. DELETE Authorized Vehicle")
    print("5. Exit")

def print_authorized_vehicles(allowed_vehicles):
    """Function to print all allowed vehicles"""
    print("\nThe AutoCountry sales manager has authorized the purchase and selling of the following vehicles:")
    for vehicle in allowed_vehicles:
        print(vehicle)

def search_authorized_vehicle(allowed_vehicles):
    """Function to search for a specific vehicle"""
    vehicle_name = input("\nPlease Enter the full Vehicle name: ").strip()
    if vehicle_name in allowed_vehicles:
        print(f"\n{vehicle_name} is an authorized vehicle")
    else:
        print(f"\n{vehicle_name} is not an authorized vehicle. Please check the spelling and try again.")

def add_authorized_vehicle(allowed_vehicles):
    """Function to add a new authorized vehicle"""
    new_vehicle = input("\nPlease Enter the full Vehicle name you would like to add: ").strip()
    if new_vehicle in allowed_vehicles:
        print(f"\n{new_vehicle} is already an authorized vehicle")
    else:
        allowed_vehicles.append(new_vehicle)
        save_allowed_vehicles(allowed_vehicles)
        print(f'\nYou have added "{new_vehicle}" as an authorized vehicle')

def delete_authorized_vehicle(allowed_vehicles):
    """Function to delete an authorized vehicle"""
    vehicle_name = input("\nPlease Enter the full Vehicle name you would like to REMOVE: ").strip()
    if vehicle_name in allowed_vehicles:
        confirm = input(f'\nAre you sure you want to remove "{vehicle_name}" from the Authorized Vehicles List? (yes/no): ').strip().lower()
        if confirm == 'yes':
            allowed_vehicles.remove(vehicle_name)
            save_allowed_vehicles(allowed_vehicles)
            print(f'\nYou have REMOVED "{vehicle_name}" as an authorized vehicle')
        else:
            print("\nVehicle removal canceled.")
    else:
        print(f'\n"{vehicle_name}" is not in the Authorized Vehicles List. Please check the spelling and try again.')

def main():
    """Main function to handle the program logic"""
    allowed_vehicles = load_allowed_vehicles()

    while True:
        # Display the menu
        display_menu()
        # Get user input
        try:
            choice = int(input("\nEnter your choice: "))
            # Handle menu options
            if choice == 1:
                print_authorized_vehicles(allowed_vehicles)
            elif choice == 2:
                search_authorized_vehicle(allowed_vehicles)
            elif choice == 3:
                add_authorized_vehicle(allowed_vehicles)
            elif choice == 4:
                delete_authorized_vehicle(allowed_vehicles)
            elif choice == 5:
                print("\nThank you for using the AutoCountry Vehicle Finder, good-bye!")
                input("Press Enter to close the program.")  # Wait for a keypress before closing
                break
            else:
                print("\nInvalid option. Please try again.")
        except ValueError:
            print("\nInvalid input. Please enter a number.")

# Run the program
if __name__ == "__main__":
    main()
